{"version":3,"file":"static/js/720.c48289a5.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\nposition: relative;\ntransform: scale(1);\ntransition: all 0.2s ease;\nbox-shadow: 0px 5px 4px rgba(0, 0, 0, 0.25);\n\n\n:hover {\n  transform: scale(1.05)\n}\n`;\n\nexport const Image = styled.img`\nborder-radius: 10px 10px 0px 0px;\nwidth: 302px\ndisplay: block;\nmargin: 0\n`;\n\n\nexport const Title = styled.p`\ndisplay: block;\nposition: absolute;\nwidth: 100%;\nbackground: rgba(251, 119, 86, 0.95);\nfont-weight: 500;\nfont-size: 20px;\ncolor: #000;\npadding: 10px 0;\ntext-align: center;\nmargin: 0;\nbottom: 0;\nleft:0;\n`;","import { IMAGE_URL } from \"components/API\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Item, Image, Title } from \"./FilmCard.styled\";\n\nexport const FilmCard = ({ name, title, poster, id }) => {\n  \n  const location = useLocation();\n  return <Item>\n    <Link to={`/movies/${id}`} state={{from: location}}>\n      <Title>{name}{title}</Title>\n      <Image src={`${IMAGE_URL}${poster}`} width='302px' alt={title} />\n    </Link>\n      </Item>}","import styled from \"@emotion/styled\";\n\nexport const GalleryList = styled.ul`\nlist-style: none;\ndisplay: grid;\ngap: 24px;\ngrid-template-columns: 302px 302px 302px 302px;\njustify-content: center;\n`;","import { GalleryList } from \"./Gallery.styled\"\n\nexport const Gallery = ({ children }) => {\n  return <GalleryList>\n    {children}\n  </GalleryList>\n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\njustify-content: center;\nmargin-top: 20px;`;\n\nexport const Input = styled.input`\nfont-family: 'Montserrat', sans-serif;\nborder: 2px solid #000000; \n  border-radius: 3px; \n  background: #FB7756;\n  outline: none; \n  height: 46px; \n  width: 600px;\n  padding: 0 10px; \n  color: #000;\n  font-size: 16px; `;\n\nexport const Button = styled.button`\nfont-family: 'Montserrat', sans-serif;\nmargin-left: 24px;\nbackground-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    cursor: pointer;\n    height: 50px;\n    \n    :hover, :focus {\n      background-color: #000;\n      color: #fff;\n\n    }`;","import { useState } from \"react\";\nimport { Input, Button, Form } from \"./SearchForm.styled\";\n\n\nexport const SearchForm = ({onSubmit, }) => {\n  const [inputQuery, setInputQuery] = useState('');\n\n    const handleChange = (e) => {\n    setInputQuery(e.target.value)\n  }\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputQuery);\n  }\n  return <Form onSubmit={formSubmit}>\n      <label>\n        <Input\n          name=\"query\"\n          placeholder=\"write the name of the movie here\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          value={inputQuery}></Input>\n      </label>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n}","import styled from \"@emotion/styled\";\n\nexport const Pagination = styled.div`\ndisplay: flex;\njustify-content: center;\nwidth: 100%;`;\n\nexport const Button = styled.button`\nfont-family: 'Montserrat', sans-serif;\nbackground-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    height: 50px;\n    margin: 10px;\n    cursor: pointer;\n    \n    :hover {\n      background-color: #000;\n      color: #fff;\n\n    }`;\n\nexport const Page = styled.p`\nfont-family: 'Montserrat', sans-serif;\nbackground-color: #fff;\n    border: 2px solid #000;\n    color: #000;\n    border-radius: 3px;\n    padding: 5px;\n    align-items: center;\n    text-align: center;\n    text-decoration: none;\n    display: flex;\n    font-size: 16px;\n    width: 100px;\n    justify-content: center;\n\n  `;","import { useState, useEffect } from \"react\";\nimport { getFilmByQuery } from \"components/API\";\nimport { FilmCard } from \"components/FilmCard/FilmCard\";\nimport { Gallery } from \"components/Gallery/Gallery\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Pagination, Page, Button } from \"./Movies.styled\";\n\n\nexport default function Movies() {\n  const [page, setPage] = useState(1);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    if (query) {\n      getFilmByQuery(page, query).then((films) => {\n        setFilms(films.results);\n        setTotalPages(films.total_pages);})\n    }\n  }, [page, query])\n\n  \n  const changeUrl = params => {\n    setSearchParams(params !== '' ? { query: params } : {})\n    setPage(1);\n  }\n\n  \n\n  return <div>\n    <SearchForm onSubmit={changeUrl} />\n    <Gallery>\n      {films && films.map(({ title, poster_path, id, name }) => {\n        window.scrollBy(0,-200);\n      return <FilmCard key={id}\n        name={name}\n        title={title}\n        id={id}\n        poster={poster_path}\n        />})}\n    </Gallery>\n    <Pagination>\n      {page === 1 && totalPages > 1 && <Button type=\"button\" onClick={() => { setPage(prev => prev - 1) }} disabled>Previous Page</Button>}\n      {totalPages > 1 && page > 1 && <Button type=\"button\" onClick={() => { setPage(prev => prev - 1) }}>Previous Page</Button>}\n      {films.length > 1 && <Page>Page: {page}</Page>}\n      {totalPages > 1 && page < totalPages &&  <Button type=\"button\" onClick={() => { setPage(prev => prev + 1) }}>Next Page</Button>}\n      {totalPages > 1 && page === totalPages && <Button type=\"button\" onClick={() => { setPage(prev => prev + 1)}} disabled>Next Page</Button>}\n    </Pagination>\n    \n    \n  </div>\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","_getTrends","_regeneratorRuntime","_callee","res","_context","prev","next","fetch","concat","sent","json","abrupt","stop","getFilmByQuery","_x","_x2","_getFilmByQuery","_callee2","page","query","_context2","getFilmById","_x3","_getFilmById","_callee3","id","_context3","getCastById","_x4","_getCastById","_callee4","_context4","getReviewsById","_x5","_getReviewsById","_callee5","_context5","Item","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Title","_templateObject3","FilmCard","_ref","name","title","poster","location","useLocation","_jsx","children","_jsxs","Link","to","state","from","src","width","alt","GalleryList","Gallery","Form","Input","Button","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","inputQuery","setInputQuery","e","preventDefault","placeholder","type","autoComplete","autoFocus","onChange","target","Pagination","Page","Movies","_searchParams$get","setPage","_useState3","_useState4","films","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState5","_useState6","totalPages","setTotalPages","useEffect","results","total_pages","params","map","poster_path","window","scrollBy","onClick","disabled","length"],"sourceRoot":""}