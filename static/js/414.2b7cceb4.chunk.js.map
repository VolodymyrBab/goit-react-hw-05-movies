{"version":3,"file":"static/js/414.2b7cceb4.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nexport const Button = styled.button`\n  display: block;\n    font-family: 'Montserrat',sans-serif;\n    margin: 20px;\n    background-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    width: 100px;\n    text-align: center;\n    text-decoration: none;\n    font-size: 16px;\n    cursor: pointer;\n    height: 30px;\n}`;\n\nexport const ButtonLink = styled(Link)`\n  display: block;\n    font-family: 'Montserrat',sans-serif;\n    margin: 20px;\n    background-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    width: 100px;\n    text-align: center;\n    text-decoration: none;\n    font-size: 16px;\n    cursor: pointer;\n}`;\n\nexport const InfoContainer = styled.div`\npadding: 20px;\nfont-size: 20px;\n`;\n\nexport const Container = styled.div`\npadding-left: 20px;\npadding-right: 20px;\ndisplay: flex`;\n","import { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { getFilmById } from \"components/API\";\nimport { IMAGE_URL } from \"components/API\";\nimport image from 'images/placeholder.jpg';\nimport { Container, InfoContainer, ButtonLink } from \"./MovieDetails.styled\";\n\n\n\nexport default function MovieDetails() {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation()\n\n  useEffect(() => {\n    if (movieId) {\n      getFilmById(movieId).then(setFilm);\n    }\n  }, [movieId]);\n\n  const date = () => {\n    if (film.first_air_date) {\n      return film.first_air_date.slice(0, 4)\n    }\n    if (film.release_date) {\n      return film.release_date.slice(0, 4)\n    }\n    if (film.first_air_date === '' || film.release_date === '') {\n      return film.status\n    }\n  };\n\n  const poster = () => {\n    if (film.poster_path) {\n      return `${IMAGE_URL}${film.poster_path}`\n    }\n    return image\n  };\n\n  return <div>\n    <ButtonLink to={location.state?.from ?? '/movies'}>Back</ButtonLink>\n    <Container>\n      <img src={poster()} alt={film.title} />\n      <InfoContainer>\n        <p><span>{film.title}{film.name}</span><span>{date()}</span></p>\n\n        <p>{film.tagline}</p>\n\n        <p><span>User Score:</span><span>{Math.round((film.vote_average / 10) * 100)}%</span></p>\n\n        <p>Overview: {film.overview}</p>\n        \n\n        <p>Genres: {film.genres && film.genres.map(genre => {\n          return <span key={genre.id}>| {genre.name} | </span>\n        })}</p>\n        \n        <div>\n        <p>Additional information</p>\n          <ButtonLink to={`/movies/${movieId}/Cast`} state={{ from: location.state?.from ?? 'movies' }}>Cast</ButtonLink>\n        <ButtonLink to={`/movies/${movieId}/Reviews`} state={{ from: location.state?.from ?? 'movies' }}>Reviews</ButtonLink>\n      </div>\n      </InfoContainer>\n      </Container>\n      \n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense>\n    \n  </div>;\n};"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","_getTrends","_regeneratorRuntime","_callee","res","_context","prev","next","fetch","concat","sent","json","abrupt","stop","getFilmByQuery","_x","_x2","_getFilmByQuery","_callee2","page","query","_context2","getFilmById","_x3","_getFilmById","_callee3","id","_context3","getCastById","_x4","_getCastById","_callee4","_context4","getReviewsById","_x5","_getReviewsById","_callee5","_context5","ButtonLink","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","InfoContainer","_templateObject3","Container","_templateObject4","MovieDetails","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","_useState","useState","_useState2","_slicedToArray","film","setFilm","movieId","useParams","location","useLocation","useEffect","_jsxs","children","_jsx","to","state","from","src","poster_path","image","alt","title","name","first_air_date","slice","release_date","status","tagline","Math","round","vote_average","overview","genres","map","genre","Suspense","fallback","Outlet"],"sourceRoot":""}