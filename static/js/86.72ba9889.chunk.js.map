{"version":3,"file":"static/js/86.72ba9889.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\ndisplay: block;\nwidth: 300px;`","import { IMAGE_URL } from \"components/API\";\nimport image from '../../images/persone.jpg';\nimport { Item } from \"./CastCard.styled\";\n\n\nexport const CastCard = ({ poster, name, character }) => {\n  \n  const imageSrc = () => {\n    if (poster) {\n      return `${IMAGE_URL}${poster}`\n    }\n    return image\n  };\n  return <Item>\n    <img src={imageSrc()} alt={name} />\n    <p>Name: {name}</p>\n    <p> Character: {character}</p>\n</Item>\n}","import styled from \"@emotion/styled\";\n\nexport const Gallery = styled.ul`\nlist-style: none;\ndisplay: grid;\ngap: 24px;\ngrid-template-columns: 300px 300px 300px 300px;\njustify-content: center;\n`;\n","import { useState, useEffect } from \"react\";\nimport { getCastById } from \"components/API\";\nimport { useParams } from \"react-router-dom\";\nimport { CastCard } from \"components/CastCard/CastCard\";\nimport { Gallery } from \"./Cast.styled\";\n\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      getCastById(movieId).then(array => setActors(array.cast))\n    }\n  }, [movieId])\n\n  return <div>\n    <Gallery>\n      {actors.length === 0 && <p>Sorry! We have no information about the actors.</p>}\n      {actors && actors.map(({id, profile_path, name, character}) => {\n        return <CastCard key={id}\n          poster={profile_path}\n          name={name}\n          character={character}\n        />\n      })}\n    </Gallery>\n    \n  </div>\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","_getTrends","_regeneratorRuntime","_callee","res","_context","prev","next","fetch","concat","sent","json","abrupt","stop","getFilmByQuery","_x","_x2","_getFilmByQuery","_callee2","page","query","_context2","getFilmById","_x3","_getFilmById","_callee3","id","_context3","getCastById","_x4","_getCastById","_callee4","_context4","getReviewsById","_x5","_getReviewsById","_callee5","_context5","Item","styled","_templateObject","_taggedTemplateLiteral","CastCard","_ref","poster","name","character","_jsxs","children","_jsx","src","alt","Gallery","Cast","_useState","useState","_useState2","_slicedToArray","actors","setActors","movieId","useParams","useEffect","array","cast","length","map","profile_path"],"sourceRoot":""}